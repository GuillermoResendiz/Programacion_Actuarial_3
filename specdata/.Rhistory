} else {
z<- z-0.5
}
}
print(cam)
plot(cam, type="l")
?repeat
?repeat
repeat{
x<- 1
z <- 5
cam<- NULL
ciclo<- while(z>=3 && z<=10){
print(z)
cam <- c(cam,z)
moneda <- rbinom(1,1,0.5)
if(moneda == 1) { #caminata aleatoria
z<- z+0.5
} else {
z<- z-0.5
}
}
x<- x+1
if(x<-100){break}
m<- if(z<- 2){
final<- "arriba"
} else{
final<- "abajo"
}
y<- c(y, m)
}
print(cam)
plot(cam, type="l")
repeat{
x<- 1
z <- 5
cam<- NULL
ciclo<- while(z>=3 && z<=10){
print(z)
cam <- c(cam,z)
moneda <- rbinom(1,1,0.5)
if(moneda == 1) { #caminata aleatoria
z<- z+0.5
} else {
z<- z-0.5
}
}
x<- x+1
if(x<-100){break}
m<- if(z<- 2){
final<- "arriba"
} else{
final<- "abajo"
}
y<- c(y, m)
}
print(cam)
plot(cam, type="l")
print(y)
repeat{
x<- 1
x<- x+1
if(x<-100){break}
m<- if(z<- 2){
final<- "abajo"
} else{
final<- "ariba"
}
z <- 5
cam<- NULL
ciclo<- while(z>=3 && z<=10){
print(z)
cam <- c(cam,z)
moneda <- rbinom(1,1,0.5)
if(moneda == 1) { #caminata aleatoria
z<- z+1
} else {
z<- z-1
}
}
}
print(cam)
plot(cam, type="l")
repeat{
x<- x+1
if(x<-100){break}
m<- if(z<3){
final<- "abajo"
} else{
final<- "ariba"
}
z <- 5
cam<- NULL
ciclo<- while(z>=3 && z<=10){
print(z)
cam <- c(cam,z)
moneda <- rbinom(1,1,0.5)
if(moneda == 1) { #caminata aleatoria
z<- z+1
} else {
z<- z-1
}
}
}
print(cam)
plot(cam, type="l")
print(y)
arriba<- 0
abajo<- 0
repeat{
x<- x+1
if(x<-100){break}
m<- if(z<3){
arriba<- arriba+1
} else{
abajo<- abajo+1
}
z <- 5
cam<- NULL
ciclo<- while(z>=3 && z<=10){
print(z)
cam <- c(cam,z)
moneda <- rbinom(1,1,0.5)
if(moneda == 1) { #caminata aleatoria
z<- z+1
} else {
z<- z-1
}
}
}
arriba
abajo
arriba<- 0
abajo<- 0
z <- 5
repeat{
cam<- NULL
ciclo<- while(z>=3 && z<=10){
print(z)
cam <- c(cam,z)
moneda <- rbinom(1,1,0.5)
if(moneda == 1) { #caminata aleatoria
z<- z+1
} else {
z<- z-1
}
}
x<- x+1
if(x==100){break}
m<- if(z<3){
arriba<- arriba+1
}else {
abajo<- abajo +1
}
}
arriba<- 0
abajo<- 0
z <- 5
repeat{
cam<- NULL
ciclo<- while(z>=3 && z<=10){
print(z)
cam <- c(cam,z)
moneda <- rbinom(1,1,0.5)
if(moneda == 1) { #caminata aleatoria
z<- z+1
} else {
z<- z-1
}
}
x<- x+1
if(x==100){break}
if(z<3){
arriba<- arriba+1
}else {
abajo<- abajo +1
}
}
arriba<- 0
abajo<- 0
z <- 5
repeat{
cam<- NULL
ciclo<- while(z>=3 && z<=10){
print(z)
cam <- c(cam,z)
moneda <- rbinom(1,1,0.5)
if(moneda == 1) { #caminata aleatoria
z<- z+1
} else {
z<- z-1
}
}
if(z<3){
arriba<- arriba+1
}else {
abajo<- abajo +1
}
x<- x+1
if(x==100){break}
}
arriba<- 0
abajo<- 0
x<- 1
z <- 5
repeat{
cam<- NULL
ciclo<- while(z>=3 && z<=10){
print(z)
cam <- c(cam,z)
moneda <- rbinom(1,1,0.5)
if(moneda == 1) { #caminata aleatoria
z<- z+1
} else {
z<- z-1
}
}
if(z<3){
arriba<- arriba+1
}else {
abajo<- abajo +1
}
x<- x+1
if(x==100){break}
}
arriba
abajo
arriba<- 0
abajo<- 0
x<- 1
z <- 5
repeat{
cam<- vector("numeric")
ciclo<- while(z>=3 && z<=10){
print(z)
cam <- c(cam,z)
moneda <- rbinom(1,1,0.5)
if(moneda == 1) { #caminata aleatoria
z<- z+1
} else {
z<- z-1
}
}
if(z<3){
arriba<- arriba+1
}else {
abajo<- abajo +1
}
x<- x+1
if(x==100){break}
}
arriba
abajo
arriba<- 0
abajo<- 0
x<- 1
z <- 5
repeat{
cam<- vector("numeric")
ciclo<- while(z>=3 && z<=10){
print(z)
cam <- c(cam,z)
moneda <- rbinom(1,1,0.5)
if(moneda == 1) { #caminata aleatoria
z<- z+1
} else {
z<- z-1
}
}
if(z<3){
arriba<- arriba+1
}else {
abajo<- abajo +1
}
x<- x+1
if(x==100){break}
}
arriba
abajo
arriba<- 0
abajo<- 0
x<- 1
z <- 5
repeat{
cam<- vector("numeric")
ciclo<- while(z>=3 && z<=10){
print(z)
cam <- c(cam,z)
moneda <- rbinom(1,1,0.5)
if(moneda == 1) { #caminata aleatoria
z<- z+1
} else {
z<- z-1
}
}
if(z<3){
arriba<- arriba+1
}else {
abajo<- abajo +1
}
x<- x+1
if(x==100){break}
}
arriba
abajo
arriba<- 0
abajo<- 0
x<- 1
z <- 5
repeat{
cam<- vector("numeric")
ciclo<- while(z>=3 && z<=10){
print(z)
cam <- c(cam,z)
moneda <- rbinom(1,1,0.5)
if(moneda == 1) { #caminata aleatoria
z<- z+1
} else {
z<- z-1
}
}
if(z<3){
arriba<- arriba+1
}else {
abajo<- abajo +1
}
x<- x+1
if(x==100){break}
}
arriba
abajo
arriba<- 0
abajo<- 0
x<- 1
z <- 5
repeat{
cam<- vector("numeric")
ciclo<- while(z>=3 && z<=10){
print(z)
cam <- c(cam,z)
moneda <- rbinom(1,1,0.5)
if(moneda == 1) { #caminata aleatoria
z<- z+1
} else {
z<- z-1
}
}
if(z<3){
arriba<- arriba+1
}else {
abajo<- abajo +1
}
x<- x+1
if(x==100){break}
}
arriba
abajo
arriba<- 0
abajo<- 0
x<- 1
z <- 5
repeat{
cam<- vector("numeric")
ciclo<- while(z>=3 && z<=10){
print(z)
cam <- c(cam,z)
moneda <- rbinom(1,1,0.5)
if(moneda == 1) { #caminata aleatoria
z<- z+1
} else {
z<- z-1
}
}
if(z<3){
arriba<- arriba+1
}else {
abajo<- abajo +1
}
x<- x+1
if(x==100){break}
}
arriba
abajo
arriba<- 0
abajo<- 0
x<- 1
z <- 5
repeat{
cam<- vector("numeric")
ciclo<- while(z>=3 && z<=10){
print(z)
cam <- c(cam,z)
moneda <- rbinom(1,1,0.5)
if(moneda == 1) { #caminata aleatoria
z<- z+0.5
} else {
z<- z-0.5
}
}
if(z<3){
arriba<- arriba+1
}else {
abajo<- abajo +1
}
x<- x+1
if(x==100){break}
}
arriba
abajo
arriba<- 0
abajo<- 0
x<- 1
repeat{
z <- 5
cam<- vector("numeric")
ciclo<- while(z>=3 && z<=10){
print(z)
cam <- c(cam,z)
moneda <- rbinom(1,1,0.5)
if(moneda == 1) { #caminata aleatoria
z<- z+0.5
} else {
z<- z-0.5
}
}
if(z<3){
arriba<- arriba+1
}else {
abajo<- abajo +1
}
x<- x+1
if(x==100){break}
}
arriba
abajo
?gitpull
?git pull
suma2 <- function(x, y){
x + y
}
suma(2,1)
suma2(5,10)
mayor10 <- function(x){
x[x>10]
}
mayor10(1:20)
mayor10(runif(100,5,15))
mayorque<- function(x,n){
x[x<n]
}
mayor10(1:10,3)
mayorque(1;10,3)
promedioCol <- function(x, quitar.NA= T){
nc <- ncol(x)
medias<- vector("numeric", nc)
for (i in 1:nc){
medias[i]<- mean(x[,i], na.rm = quitar.NA)
}
}
promedioCol(as.data.frame(c(1,2,3,NA)))
?plot
?paste
?cat
?paste
completos<- function(directorio="C:/Users/guillermo/Documents/GitHub/Programacion_Actuarial_3/specdata", id=1:332){
num<- vector("numeric")
setwd(directorio)
for (i in id){
if (i<10) {
leer<- read.csv(paste("00", i, ".csv", sep=""))
} else if(i>=10 && i<100 ) {
leer<- read.csv(paste("0", i,".csv", sep=""))
}else {
leer<- read.csv(paste(i,".csv",sep=""))
}
combinar<- cbind(leer[, 2:3])
casoscomp<- complete.cases(combinar)
cas<- combinar[casoscomp, ]
cont<- nrow(cas)
num<- c(num, cont)
}
resultado<- data.frame(id, nobs= num)
resultado
}
completos(,1:90)
corr<- function(directorio="C:/Users/guillermo/Documents/GitHub/Programacion_Actuarial_3/specdata", horizonte=0){
id<- 1:332
id
relacion<- vector("numeric")
final<- vector("numeric")
setwd(directorio)
for (i in id){
if (i<10) {
leer<- read.csv(paste("00", i, ".csv", sep=""))
} else if(i>=10 && i<100 ) {
leer<- read.csv(paste("0", i,".csv", sep=""))
}else {
leer<- read.csv(paste(i,".csv",sep=""))
}
combinar<- cbind(leer[, 2:3])
casoscomp<- complete.cases(leer)
cas<- leer[casoscomp, ]
cont<- nrow(cas)
if(cont>=horizonte){
relacion<- cor(cas[2],cas[3])
vec<- as.vector(relacion)
final<- c(final, vec)
}
}
final
}
corr(, 600)
